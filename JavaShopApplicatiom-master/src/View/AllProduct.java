/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;
import java.util.ArrayList;
import Controller.ProductController;
import Data.Product;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Shady
 */
public class AllProduct extends javax.swing.JFrame {

    /**
     * Creates new form AllProduct
     */
    private int rowselected;
    private ProductController proController=new ProductController();
    
    public AllProduct() throws SQLException {
        initComponents();
        showAllProductOnTable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextID = new javax.swing.JTextField();
        jTextNumber = new javax.swing.JTextField();
        jTextName = new javax.swing.JTextField();
        jTextPrice = new javax.swing.JTextField();
        jTextDetail = new javax.swing.JTextField();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Number", "Price", "Detail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Id:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Detail:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Price:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Number:");

        jTextID.setEditable(false);
        jTextID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextDetail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButtonInsert.setText("Insert");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTextSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextSearchKeyPressed(evt);
            }
        });

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonRefresh.setText("Refresh");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextID)
                            .addComponent(jTextName)
                            .addComponent(jTextNumber)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(31, Short.MAX_VALUE)
                        .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextDetail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextPrice))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextSearch)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        rowselected=jTable1.getSelectedRow();
        TableModel model=jTable1.getModel();
        jTextID.setText(model.getValueAt(rowselected,0).toString());
        jTextName.setText(model.getValueAt(rowselected,1).toString());
        jTextNumber.setText(model.getValueAt(rowselected,2).toString());
        jTextPrice.setText(model.getValueAt(rowselected,3).toString());
        jTextDetail.setText(model.getValueAt(rowselected,4).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        //Insert();
        deletedSpace();
        if(!isNull(jTextDetail.getText())&&!isNull(jTextName.getText())&&!isNull(jTextNumber.getText())&&!isNull(jTextPrice.getText()))
        {
            proController.InsertProduct(jTextName.getText(),  Integer.parseInt(jTextNumber.getText()), Integer.parseInt(jTextPrice.getText()), jTextDetail.getText());
            try {
              
                showAllProductOnTable();
                if(!proController.IsHad())
                {
                    JOptionPane.showMessageDialog(null, "Thêm thành công!");
                    refresh();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AllProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin");
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        deletedSpace();
        if(!isNull(jTextID.getText())&&!isNull(jTextDetail.getText())&&!isNull(jTextName.getText())&&!isNull(jTextNumber.getText())&&!isNull(jTextPrice.getText()))
        {
            proController.DeleteProduct(Integer.parseInt(jTextID.getText()));

            try {
                showAllProductOnTable();
                JOptionPane.showMessageDialog(null, "Xóa thành công!");
                refresh();
            } catch (SQLException ex) {
                Logger.getLogger(AllProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm để xóa");
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        deletedSpace();
        TableModel model=jTable1.getModel();
        if(!isNull(jTextDetail.getText())&&!isNull(jTextName.getText())&&!isNull(jTextNumber.getText())&&!isNull(jTextPrice.getText()))
        {
            proController.UpdateProduct(jTextName.getText(), Integer.parseInt(jTextNumber.getText()), Integer.parseInt(jTextPrice.getText()), jTextDetail.getText(),Integer.parseInt(model.getValueAt(rowselected, 0).toString()));
            try {
                showAllProductOnTable();
                if(!proController.IsHad())
                {
                    JOptionPane.showMessageDialog(null, "Cập nhật thành công!");
                    refresh();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AllProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin");
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        String st=jTextSearch.getText();
        refresh();
        if(!isNull(st))
        {
            try {
                showAllProductOnTable();
            } catch (SQLException ex) {
                Logger.getLogger(AllProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            //System.out.println(""+model.getRowCount());
            //model.removeRow(9);
            for (int i=0;i<model.getRowCount();i++)
            {
                String stname=model.getValueAt(i, 1).toString();
                if(!stname.matches(st+"(.*)")&&!stname.matches("(.*)"+st+"(.*)")&&!stname.matches("(.*)"+st))
                {
                    model.removeRow(i);
                    i--;
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập dữ liệu để tìm kiếm!");
        }
        
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String st=jTextSearch.getText();
            refresh();
            if(!isNull(st))
            {
                try {
                    showAllProductOnTable();
                } catch (SQLException ex) {
                    Logger.getLogger(AllProduct.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
                System.out.println(""+model.getRowCount());
                //model.removeRow(9);
                for (int i=0;i<model.getRowCount();i++)
                {
                    String stname=model.getValueAt(i, 1).toString();
                    if(!stname.matches(st+"(.*)")&&!stname.matches("(.*)"+st+"(.*)")&&!stname.matches("(.*)"+st))
                    {
                        model.removeRow(i);
                        i--;
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập dữ liệu để tìm kiếm!");
            }
        }
    }//GEN-LAST:event_jTextSearchKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.dispose();
        DashBoard db=new DashBoard();
        db.show();
        db.getjLabelUsername().setText(Login.Username);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AllProduct().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(AllProduct.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    
    void refresh()
    {
        jTextID.setText("");
        jTextName.setText("");
        jTextNumber.setText("");
        jTextPrice.setText("");
        jTextDetail.setText("");
    }
    
    void deletedSpace()
    {
        jTextID.setText(deleteSpace(jTextID.getText()));
        jTextNumber.setText(deleteSpace(jTextNumber.getText()));
        jTextPrice.setText(deleteSpace(jTextPrice.getText()));
    }
    
    String deleteSpace(String st)
    {
        String st1="";
        for(int i=0;i<st.length();i++)
        {
            if(st.charAt(i)!=' ')
                st1+=st.charAt(i);
        }
        return st1;
    }
    
    Boolean isNull(String st)
    {
        Boolean _isnull=false;
        if(st.equals(""))
        {
            _isnull=true;
            }
        int d=0;
        for(int i=0;i<st.length();i++)
        {
            if(st.charAt(i)!=' ')
                d++;
        }
        if(d==0)
            _isnull=true;
        return _isnull;
    }
    
    
    
    public void showAllProductOnTable() throws SQLException
    {
        ArrayList<Product> listProduct=proController.getAllProduct();
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        Object[] row=new Object[5];
        for (int i=0;i<listProduct.size();i++)
        {
            row[0]=listProduct.get(i).getId();
            row[1]=listProduct.get(i).getName();
            row[2]=listProduct.get(i).getNumber();
            row[3]=listProduct.get(i).getPrice();
            row[4]=listProduct.get(i).getDetail();
            
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextDetail;
    private javax.swing.JTextField jTextID;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextNumber;
    private javax.swing.JTextField jTextPrice;
    private javax.swing.JTextField jTextSearch;
    // End of variables declaration//GEN-END:variables
}
