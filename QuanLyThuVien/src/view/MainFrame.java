package view;

import controller.CTMTController;
import controller.DocGiaController;
import controller.SachController;
import controller.TTMTController;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import model.DocGia;
import model.Sach;
import model.ThongTinMuonTra;

public class MainFrame extends javax.swing.JFrame {
    
    SachController sachController;
    DocGiaController docGiaController;
    TTMTController ttmtController;
    CTMTController ctmtController;
    ArrayList<ThongTinMuonTra> listTTMT;
    ArrayList<DocGia> listDocGia;
    // Thuộc tính tạm, lưu các trường sẽ gửi tới giao diện sửa sách
    int maSach, namXuatBan, giaTien;
    String tenSach, theLoai, tacGia, nhaXuatBan;

    // Thuộc tính tạm, lưu các trường sẽ gửi tới giao diện sửa độc giả
    int maDocGia, dienThoai;
    String tenDocGia, ngaySinh, lop, queQuan;

    // Thuộc tính tạm, lưu các trường sẽ được chọn khi click vào bảng 3 (thông tin mượn trả),
    // sẽ được gửi tới giao diện sửa thông tin mượn trả
    int maMuonTra3, datCoc3, soLuongChuaTra3, tienPhat3;
    String tenDocGia3, ghiChu3;

    // Thuộc tính tạm, lưu các trường sẽ được chọn khi click vào bảng 4( chi tiết mượn trả),
    // sẽ được gửi tới giao diện sửa chi tiết mượn trả
    int maCTMT4, maSach4, tienPhat4;
    String tenSach4, ngayMuon4, hanTra4, ngayTra4, tinhTrang4, ghiChu4;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() throws SQLException {
        try {
            initComponents();
            this.setTitle("Thư viện Trường Đại học Bách Khoa Hà Nội");
            this.setLocationRelativeTo(null);
            this.setResizable(false);
            this.setDefaultCloseOperation(EXIT_ON_CLOSE);
            // Load dữ liệu cho bảng 1 ( bảng sachs )
            setJTableColumnsWidth(jTable1, 1028, 8, 25, 15, 20, 12, 10, 10);// Chia tỉ lệ độ rộng cho các cột
            sachController = new SachController();
            sachController.show_Sach_On_JTable(sachController.getListSach(0, "", ""), (DefaultTableModel) jTable1.getModel());

            // Load dữ liệu cho bảng 2 ( bảng độc giả )
            setJTableColumnsWidth(jTable2, 1028, 10, 20, 15, 20, 15, 20);// Chia tỉ lệ độ rộng cho các cột
            docGiaController = new DocGiaController();
            listDocGia = docGiaController.getListDocGia(0, "");
            docGiaController.show_DocGia_On_JTable(listDocGia, (DefaultTableModel) jTable2.getModel());

            // Load dữ liệu cho bảng 3 ( bảng thông tin mượn trả)
            setJTableColumnsWidth(jTable3, 1028, 10, 20, 15, 20, 15, 20); // Chia tỉ lệ độ rộng cho các cột
            ttmtController = new TTMTController();
            listTTMT = ttmtController.getListTTMT(0, "");
            ttmtController.show_TTMT_On_JTable(listTTMT, (DefaultTableModel) jTable3.getModel());
            
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void setJTableColumnsWidth(JTable table, int tablePreferredWidth,
            double... percentages) {
        double total = 0;
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            total += percentages[i];
        }
        
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setPreferredWidth((int) (tablePreferredWidth * (percentages[i] / total)));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên Sách", "Thể Loại", "Tác Giả", "Nhà Xuất Bản", "Năm Xuất Bản", "Giá Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton7.setText("Sửa Sách");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Thêm Sách");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Xóa Sách");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton13.setText("Tìm Kiếm");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jButton8)
                .addGap(87, 87, 87)
                .addComponent(jButton7)
                .addGap(84, 84, 84)
                .addComponent(jButton9)
                .addGap(96, 96, 96)
                .addComponent(jButton13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton13))
                .addGap(34, 34, 34))
        );

        jTabbedPane1.addTab("Quản lý sách", jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Độc Giả", "Tên Độc Giả", "Ngày Sinh", "Lớp Học", "Số Điện Thoại", "Quê Quán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable2MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton10.setText("Sửa ĐG");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Thêm ĐG");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Xóa ĐG");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton14.setText("Tìm Kiếm");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jButton11)
                .addGap(96, 96, 96)
                .addComponent(jButton10)
                .addGap(86, 86, 86)
                .addComponent(jButton12)
                .addGap(89, 89, 89)
                .addComponent(jButton14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jButton12)
                    .addComponent(jButton14))
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Quản lý độc giả", jPanel2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Thông Tin Mượn Trả");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Chi Tiết Mượn Trả");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Mượn Trả", "Tên Độc Giả", "Đặt Cọc", "Số Lượng Chưa Trả", "Tiền Phạt", "Ghi Chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Chi Tiết", "Mã Sách", "Tên Sách", "Ngày Mượn", "Hạn Trả", "Ngày Trả", "Tiền Phạt", "Tình Trạng", "Ghi Chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jButton1.setText("Thêm TTMT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sửa TTMT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Xóa TTMT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Thêm CTMT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Sửa CTMT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Xóa CTMT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton15.setText("Tìm Kiếm TTMT");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả mượn trả", "Theo mã mượn trả", "Theo tên độc giả" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton16.setText("Trả sách");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton15))
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton15, jButton2, jButton3});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton4, jButton5, jButton6});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton16))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2});

        jTabbedPane1.addTab("Quản lý mượn trả", jPanel3);

        jButton17.setText("Thống Kê Sách");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Thống Kê Độc Giả");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Thống Kê Chi Tiết Mượn Trả");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jButton17)
                .addGap(145, 145, 145)
                .addComponent(jButton18)
                .addGap(147, 147, 147)
                .addComponent(jButton19)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton17, jButton18, jButton19});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19))
                .addContainerGap(385, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton17, jButton18, jButton19});

        jTabbedPane1.addTab("Thống kê", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/* MAI MAI */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới xóa được
        if (jTable3.getSelectedRow() == -1) {
            // Kiểm tra xem bảng có dữ liệu hay không ?
            if (jTable3.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để xóa ?");
            }
        } else {
            this.dispose();
            int answer = JOptionPane.showConfirmDialog(rootPane, "Bạn thật sự muốn xóa ?", " Xóa thông tin mượn trả ", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                TTMTController ttmtc = new TTMTController();
                SachController sc = new SachController();
                CTMTController ctmtc = new CTMTController();
                // Biến search để tìm kiếm sách trong bảng chi tiết mượn, xem có ai đang mượn sách đó hay không
                boolean search = false;
                if (ctmtc.getMaSachFromChiTietMuonTra(maMuonTra3)) {
                    // Nếu tìm thấy thì không cho xóa và thông báo ra
                    JOptionPane.showMessageDialog(rootPane, "Bạn không được xóa, sách đang được mượn !");
                    
                } else {
                    boolean isDelete = false;
                    try {
                        isDelete = ttmtc.deleteTTMT(maMuonTra3);
                    } catch (IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (isDelete) {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thành công !");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thất bại !");
                    }
                }
                
            } else {
                // Huy bo xoa sach
            }
            try {
                MainFrame mf = new MainFrame();
                mf.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.dispose();
        GDThemSach gd = new GDThemSach();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới xóa được
        if (jTable1.getSelectedRow() == -1) {
            // Kiểm tra xem bảng có dữ liệu hay không ?
            if (jTable1.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để xóa ?");
            }
        } else {
            this.dispose();
            int answer = JOptionPane.showConfirmDialog(rootPane, "Bạn thật sự muốn xóa ?", " Xóa Sách ", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                SachController sc = new SachController();
                // Biến search để tìm kiếm sách trong bảng chi tiết mượn, xem có ai đang mượn sách đó hay không
                boolean search = false;
                if (sc.searchSachFromCTMT(maSach)) {
                    // Nếu tìm thấy thì không cho xóa và thông báo ra
                    JOptionPane.showMessageDialog(rootPane, "Bạn không được xóa, sách đang được mượn !");
                } else {
                    boolean isDelete = sc.deleteSach(maSach);
                    if (isDelete) {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thành công !");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thất bại !");
                    }
                }
                
            } else {
                // Huy bo xoa sach
            }
            try {
                MainFrame mf = new MainFrame();
                mf.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        this.dispose();
        GDThemDocGia gd = new GDThemDocGia();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        // Khi mà jTextFiled1 đã được người dùng điền vào gì đó
        if (jTextField1.getText().length() != 0) {
            if (jComboBox1.getSelectedIndex() == 1) {
                //ComboBox chọn cái thứ hai
                try {
                    // Tìm kiếm thông tin mượn trả theo mã mượn trả
                    listTTMT = ttmtController.getListTTMT(Integer.parseInt(jTextField1.getText()), "");
                    // Làm cho bảng hiển thị rỗng
                    model3.setRowCount(0);
                    ttmtController.show_TTMT_On_JTable(listTTMT, model3);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
            } else if (jComboBox1.getSelectedIndex() == 2) {
                // ComboBox chọn cái thứ 3
                try {
                    // Tìm kiếm thông tin mượn trả theo tên độc giả
                    listTTMT = ttmtController.getListTTMT(0, jTextField1.getText());
                    // Làm cho bảng hiển thị rỗng
                    model3.setRowCount(0);
                    ttmtController.show_TTMT_On_JTable(listTTMT, model3);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            
        } else {// Khi mà jTextField1 bị để trống
            // ComboBox chọn cái thứ 1
            if (jComboBox1.getSelectedIndex() == 0) {
                try {
                    // Tìm kiếm thông tin mượn trả theo tên độc giả
                    listTTMT = ttmtController.getListTTMT(0, "");
                    // Làm cho bảng hiển thị rỗng
                    model3.setRowCount(0);
                    ttmtController.show_TTMT_On_JTable(listTTMT, model3);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới sửa được
        if (jTable1.getSelectedRow() == -1) {
            // Kiểm tra xem bảng có dữ liệu hay không ?
            if (jTable1.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để sửa ?");
            }
        } else {
            this.dispose();
            GDSuaSach gdss = new GDSuaSach(maSach, tenSach, theLoai, tacGia, nhaXuatBan, namXuatBan, giaTien);
            gdss.setVisible(true);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới sửa được
        if (jTable2.getSelectedRow() == -1) {
            if (jTable2.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để sửa ?");
            }
        } else {
            try {
                this.dispose();
                GDSuaDocGia gd = new GDSuaDocGia(maDocGia, tenDocGia, ngaySinh, lop, dienThoai, queQuan);
                gd.setVisible(true);
            } catch (ParseException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            this.dispose();
            GDThemTTMT gd = new GDThemTTMT();
            gd.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới sửa được
        if (jTable3.getSelectedRow() == -1) {
            if (jTable3.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để sửa ?");
            }
        } else {
            this.dispose();
            GDSuaTTMT gd = new GDSuaTTMT(maMuonTra3, tenDocGia3, datCoc3, soLuongChuaTra3, tienPhat3, ghiChu3);
            gd.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới sửa được
        if (jTable3.getSelectedRow() == -1) {
            if (jTable3.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn phải chọn hàng thông tin mượn trả trước !");
            }
        } else {
            try {
                this.dispose();
                GDThemCTMT gd = new GDThemCTMT(maMuonTra3);
                gd.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới sửa được
        if (jTable4.getSelectedRow() == -1) {
            if (jTable4.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để sửa ?");
            }
        } else {
            try {
                this.dispose();
                GDSuaCTMT gds = new GDSuaCTMT(maCTMT4, maSach4, tenSach4, ngayMuon4, hanTra4, ngayTra4, tienPhat4, tinhTrang4, ghiChu4);
                gds.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        this.dispose();
        GDTimKiemSach gd = new GDTimKiemSach();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        this.dispose();
        GDTimKiemDG gd = new GDTimKiemDG();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        this.dispose();
        GDThongKeSach gd = new GDThongKeSach();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        this.dispose();
        GDThongKeDG gd = new GDThongKeDG();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        this.dispose();
        GDThongKeCTMT gd = new GDThongKeCTMT();
        gd.setVisible(true);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        maSach = (int) model1.getValueAt(i, 0);
        tenSach = model1.getValueAt(i, 1).toString();
        theLoai = model1.getValueAt(i, 2).toString();
        tacGia = model1.getValueAt(i, 3).toString();
        nhaXuatBan = model1.getValueAt(i, 4).toString();
        namXuatBan = (int) model1.getValueAt(i, 5);
        giaTien = (int) model1.getValueAt(i, 6);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        int i = jTable2.getSelectedRow();
        maDocGia = (int) model2.getValueAt(i, 0);
        tenDocGia = model2.getValueAt(i, 1).toString();
        ngaySinh = model2.getValueAt(i, 2).toString();
        lop = model2.getValueAt(i, 3).toString();
        dienThoai = (int) model2.getValueAt(i, 4);
        queQuan = model2.getValueAt(i, 5).toString();
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới xóa được
        if (jTable2.getSelectedRow() == -1) {
            // Kiểm tra xem bảng có dữ liệu hay không ?
            if (jTable2.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để xóa ?");
            }
        } else {
            this.dispose();
            int answer = JOptionPane.showConfirmDialog(rootPane, "Bạn thật sự muốn xóa ?", " Xóa Sách ", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                DocGiaController dc = new DocGiaController();
                // Biến search để tìm kiếm độc giả trong bảng thông tin  mượn, xem xem số lượng chưa trả có khác 0 hay không
                if (dc.checkToDeleteDocGia(maDocGia) == false) {
                    // Nếu tìm thấy thì không cho xóa và thông báo ra
                    JOptionPane.showMessageDialog(rootPane, "Bạn không được xóa, độc giả đang mượn sách !");
                } else {
                    boolean isDelete = dc.deleteDocGia(maDocGia);
                    if (isDelete) {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thành công !");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thất bại !");
                    }
                }
                
            } else {
                // Huy bo xoa sach
            }
            try {
                MainFrame mf = new MainFrame();
                mf.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        try {
            DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
            int i = jTable3.getSelectedRow();
            maMuonTra3 = (int) model3.getValueAt(i, 0);
            tenDocGia3 = model3.getValueAt(i, 1).toString();
            datCoc3 = (int) model3.getValueAt(i, 2);
            soLuongChuaTra3 = (int) model3.getValueAt(i, 3);
            tienPhat3 = (int) model3.getValueAt(i, 4);
            ghiChu3 = model3.getValueAt(i, 5).toString();

            // Hiển thị list ChiTietMuonTra của thông tin mượn trả được chọn lên bảng 4
            DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
            model4.setRowCount(0);
            setJTableColumnsWidth(jTable4, 1028, 9, 9, 28, 9, 9, 9, 9, 9, 9);
            ctmtController = new CTMTController();
            ctmtController.show_CTMT_On_JTable(ctmtController.getListCTMT(maMuonTra3), model4);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jTable3MouseClicked

    private void jTable2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseEntered

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        //    int maCTMT4, maSach4, tienPhat4;
        // String tenSach4, ngayMuon4, hanTra4, ngayTra4, tinhTrang4, ghiChu4;
        try {
            DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
            int i = jTable4.getSelectedRow();
            maCTMT4 = (int) model4.getValueAt(i, 0);
            maSach4 = (int) model4.getValueAt(i, 1);
            tenSach4 = model4.getValueAt(i, 2).toString();
            ngayMuon4 = model4.getValueAt(i, 3).toString();
            hanTra4 = model4.getValueAt(i, 4).toString();
            if (model4.getValueAt(i, 5) != null) {
                ngayTra4 = model4.getValueAt(i, 5).toString();
            } else {
                ngayTra4 = "";
            }
            tienPhat4 = (int) model4.getValueAt(i, 6);
            tinhTrang4 = model4.getValueAt(i, 7).toString();
            if (model4.getValueAt(i, 8) != null) {
                ghiChu4 = model4.getValueAt(i, 8).toString();
            }else{
                ghiChu4 = "";
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới xóa được
        if (jTable4.getSelectedRow() == -1) {
            if (jTable4.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn hàng nào để xóa ?");
            }
        } else {
            this.dispose();
            int answer = JOptionPane.showConfirmDialog(rootPane, "Bạn thật sự muốn xóa ?", " Xóa thông tin mượn trả ", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                try {
                    CTMTController cc = new CTMTController();
                    boolean isDelete = false;
                    isDelete = cc.deleteCTMT(maCTMT4, maSach4);
                    if (isDelete) {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thành công !");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Xóa thất bại !");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
            } else {
                // Huy bo xoa sach
            }
            try {
                MainFrame mf = new MainFrame();
                mf.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
        model3.setRowCount(0);
        DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
        model4.setRowCount(0);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        DefaultTableModel model4 = (DefaultTableModel) jTable4.getModel();
        // Nếu không chọn hàng nào trên bảng thì thông báo phải chọn mới sửa được
        if (jTable4.getSelectedRow() == -1) {
            if (jTable4.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Bảng dữ liệu rỗng !");
            } else {
                JOptionPane.showMessageDialog(null, "Bạn chưa chọn chi tiết mượn nào để trả !");
            }
        } else {
            try {
                this.dispose();
                GDTraSach gdts = new GDTraSach(maCTMT4, maSach4, tenSach4, ngayMuon4, hanTra4, ngayTra4, tienPhat4, tinhTrang4, ghiChu4);
                gdts.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                    
                } catch (SQLException ex) {
                    Logger.getLogger(MainFrame.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
